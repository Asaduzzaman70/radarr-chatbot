{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/app/hot-reloader-client.tsx"],"sourcesContent":["import type { ReactNode } from 'react'\nimport { useCallback, useEffect, startTransition, useMemo, useRef } from 'react'\nimport stripAnsi from 'next/dist/compiled/strip-ansi'\nimport formatWebpackMessages from '../utils/format-webpack-messages'\nimport { useRouter } from '../../navigation'\nimport {\n  ACTION_BEFORE_REFRESH,\n  ACTION_BUILD_ERROR,\n  ACTION_BUILD_OK,\n  ACTION_DEBUG_INFO,\n  ACTION_DEV_INDICATOR,\n  ACTION_REFRESH,\n  ACTION_STATIC_INDICATOR,\n  ACTION_UNHANDLED_ERROR,\n  ACTION_UNHANDLED_REJECTION,\n  ACTION_VERSION_INFO,\n  REACT_REFRESH_FULL_RELOAD,\n  reportInvalidHmrMessage,\n  useErrorOverlayReducer,\n} from '../shared'\nimport { parseStack } from '../utils/parse-stack'\nimport { AppDevOverlay } from './app-dev-overlay'\nimport { useErrorHandler } from '../../errors/use-error-handler'\nimport { RuntimeErrorHandler } from '../../errors/runtime-error-handler'\nimport {\n  useSendMessage,\n  useTurbopack,\n  useWebsocket,\n  useWebsocketPing,\n} from '../utils/use-websocket'\nimport { parseComponentStack } from '../utils/parse-component-stack'\nimport type { VersionInfo } from '../../../../server/dev/parse-version-info'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from '../../../../server/dev/hot-reloader-types'\nimport type {\n  HMR_ACTION_TYPES,\n  TurbopackMsgToBrowser,\n} from '../../../../server/dev/hot-reloader-types'\nimport { REACT_REFRESH_FULL_RELOAD_FROM_ERROR } from '../shared'\nimport type { HydrationErrorState } from '../../errors/hydration-error-info'\nimport type { DebugInfo } from '../types'\nimport { useUntrackedPathname } from '../../navigation-untracked'\nimport { getReactStitchedError } from '../../errors/stitched-error'\nimport { handleDevBuildIndicatorHmrEvents } from '../../../dev/dev-build-indicator/internal/handle-dev-build-indicator-hmr-events'\nimport type { GlobalErrorComponent } from '../../error-boundary'\nimport type { DevIndicatorServerState } from '../../../../server/dev/dev-indicator-server-state'\nimport reportHmrLatency from '../utils/report-hmr-latency'\nimport { TurbopackHmr } from '../utils/turbopack-hot-reloader-common'\n\nexport interface Dispatcher {\n  onBuildOk(): void\n  onBuildError(message: string): void\n  onVersionInfo(versionInfo: VersionInfo): void\n  onDebugInfo(debugInfo: DebugInfo): void\n  onBeforeRefresh(): void\n  onRefresh(): void\n  onStaticIndicator(status: boolean): void\n  onDevIndicator(devIndicator: DevIndicatorServerState): void\n}\n\nlet mostRecentCompilationHash: any = null\nlet __nextDevClientId = Math.round(Math.random() * 100 + Date.now())\nlet reloading = false\nlet webpackStartMsSinceEpoch: number | null = null\nconst turbopackHmr: TurbopackHmr | null = process.env.TURBOPACK\n  ? new TurbopackHmr()\n  : null\n\nlet pendingHotUpdateWebpack = Promise.resolve()\nlet resolvePendingHotUpdateWebpack: () => void = () => {}\nfunction setPendingHotUpdateWebpack() {\n  pendingHotUpdateWebpack = new Promise((resolve) => {\n    resolvePendingHotUpdateWebpack = () => {\n      resolve()\n    }\n  })\n}\n\nexport function waitForWebpackRuntimeHotUpdate() {\n  return pendingHotUpdateWebpack\n}\n\nfunction handleSuccessfulHotUpdateWebpack(\n  dispatcher: Dispatcher,\n  sendMessage: (message: string) => void,\n  updatedModules: ReadonlyArray<string>\n) {\n  resolvePendingHotUpdateWebpack()\n  dispatcher.onBuildOk()\n  reportHmrLatency(\n    sendMessage,\n    updatedModules,\n    webpackStartMsSinceEpoch!,\n    Date.now()\n  )\n\n  dispatcher.onRefresh()\n}\n\n// There is a newer version of the code available.\nfunction handleAvailableHash(hash: string) {\n  // Update last known compilation hash.\n  mostRecentCompilationHash = hash\n}\n\n/**\n * Is there a newer version of this code available?\n * For webpack: Check if the hash changed compared to __webpack_hash__\n * For Turbopack: Always true because it doesn't have __webpack_hash__\n */\nfunction isUpdateAvailable() {\n  if (process.env.TURBOPACK) {\n    return true\n  }\n\n  /* globals __webpack_hash__ */\n  // __webpack_hash__ is the hash of the current compilation.\n  // It's a global variable injected by Webpack.\n  return mostRecentCompilationHash !== __webpack_hash__\n}\n\n// Webpack disallows updates in other states.\nfunction canApplyUpdates() {\n  // @ts-expect-error module.hot exists\n  return module.hot.status() === 'idle'\n}\nfunction afterApplyUpdates(fn: any) {\n  if (canApplyUpdates()) {\n    fn()\n  } else {\n    function handler(status: any) {\n      if (status === 'idle') {\n        // @ts-expect-error module.hot exists\n        module.hot.removeStatusHandler(handler)\n        fn()\n      }\n    }\n    // @ts-expect-error module.hot exists\n    module.hot.addStatusHandler(handler)\n  }\n}\n\nfunction performFullReload(err: any, sendMessage: any) {\n  const stackTrace =\n    err &&\n    ((err.stack && err.stack.split('\\n').slice(0, 5).join('\\n')) ||\n      err.message ||\n      err + '')\n\n  sendMessage(\n    JSON.stringify({\n      event: 'client-full-reload',\n      stackTrace,\n      hadRuntimeError: !!RuntimeErrorHandler.hadRuntimeError,\n      dependencyChain: err ? err.dependencyChain : undefined,\n    })\n  )\n\n  if (reloading) return\n  reloading = true\n  window.location.reload()\n}\n\n// Attempt to update code on the fly, fall back to a hard reload.\nfunction tryApplyUpdates(\n  onBeforeUpdate: (hasUpdates: boolean) => void,\n  onHotUpdateSuccess: (updatedModules: string[]) => void,\n  sendMessage: any,\n  dispatcher: Dispatcher\n) {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    resolvePendingHotUpdateWebpack()\n    dispatcher.onBuildOk()\n    reportHmrLatency(sendMessage, [], webpackStartMsSinceEpoch!, Date.now())\n    return\n  }\n\n  function handleApplyUpdates(err: any, updatedModules: string[] | null) {\n    if (err || RuntimeErrorHandler.hadRuntimeError || !updatedModules) {\n      if (err) {\n        console.warn(REACT_REFRESH_FULL_RELOAD)\n      } else if (RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n      }\n      performFullReload(err, sendMessage)\n      return\n    }\n\n    const hasUpdates = Boolean(updatedModules.length)\n    if (typeof onHotUpdateSuccess === 'function') {\n      // Maybe we want to do something.\n      onHotUpdateSuccess(updatedModules)\n    }\n\n    if (isUpdateAvailable()) {\n      // While we were updating, there was a new update! Do it again.\n      tryApplyUpdates(\n        hasUpdates ? () => {} : onBeforeUpdate,\n        hasUpdates ? () => dispatcher.onBuildOk() : onHotUpdateSuccess,\n        sendMessage,\n        dispatcher\n      )\n    } else {\n      dispatcher.onBuildOk()\n      if (process.env.__NEXT_TEST_MODE) {\n        afterApplyUpdates(() => {\n          if (self.__NEXT_HMR_CB) {\n            self.__NEXT_HMR_CB()\n            self.__NEXT_HMR_CB = null\n          }\n        })\n      }\n    }\n  }\n\n  // https://webpack.js.org/api/hot-module-replacement/#check\n  // @ts-expect-error module.hot exists\n  module.hot\n    .check(/* autoApply */ false)\n    .then((updatedModules: any[] | null) => {\n      if (!updatedModules) {\n        return null\n      }\n\n      if (typeof onBeforeUpdate === 'function') {\n        const hasUpdates = Boolean(updatedModules.length)\n        onBeforeUpdate(hasUpdates)\n      }\n      // https://webpack.js.org/api/hot-module-replacement/#apply\n      // @ts-expect-error module.hot exists\n      return module.hot.apply()\n    })\n    .then(\n      (updatedModules: any[] | null) => {\n        handleApplyUpdates(null, updatedModules)\n      },\n      (err: any) => {\n        handleApplyUpdates(err, null)\n      }\n    )\n}\n\n/** Handles messages from the sevrer for the App Router. */\nfunction processMessage(\n  obj: HMR_ACTION_TYPES,\n  sendMessage: (message: string) => void,\n  processTurbopackMessage: (msg: TurbopackMsgToBrowser) => void,\n  router: ReturnType<typeof useRouter>,\n  dispatcher: Dispatcher,\n  appIsrManifestRef: ReturnType<typeof useRef>,\n  pathnameRef: ReturnType<typeof useRef>\n) {\n  if (!('action' in obj)) {\n    return\n  }\n\n  function handleErrors(errors: ReadonlyArray<unknown>) {\n    // \"Massage\" webpack messages.\n    const formatted = formatWebpackMessages({\n      errors: errors,\n      warnings: [],\n    })\n\n    // Only show the first error.\n    dispatcher.onBuildError(formatted.errors[0])\n\n    // Also log them to the console.\n    for (let i = 0; i < formatted.errors.length; i++) {\n      console.error(stripAnsi(formatted.errors[i]))\n    }\n\n    // Do not attempt to reload now.\n    // We will reload on next success instead.\n    if (process.env.__NEXT_TEST_MODE) {\n      if (self.__NEXT_HMR_CB) {\n        self.__NEXT_HMR_CB(formatted.errors[0])\n        self.__NEXT_HMR_CB = null\n      }\n    }\n  }\n\n  function handleHotUpdate() {\n    if (process.env.TURBOPACK) {\n      const hmrUpdate = turbopackHmr!.onBuilt()\n      if (hmrUpdate != null) {\n        reportHmrLatency(\n          sendMessage,\n          [...hmrUpdate.updatedModules],\n          hmrUpdate.startMsSinceEpoch,\n          hmrUpdate.endMsSinceEpoch\n        )\n      }\n      dispatcher.onBuildOk()\n    } else {\n      tryApplyUpdates(\n        function onBeforeHotUpdate(hasUpdates: boolean) {\n          if (hasUpdates) {\n            dispatcher.onBeforeRefresh()\n          }\n        },\n        function onSuccessfulHotUpdate(webpackUpdatedModules: string[]) {\n          // Only dismiss it when we're sure it's a hot update.\n          // Otherwise it would flicker right before the reload.\n          handleSuccessfulHotUpdateWebpack(\n            dispatcher,\n            sendMessage,\n            webpackUpdatedModules\n          )\n        },\n        sendMessage,\n        dispatcher\n      )\n    }\n  }\n\n  switch (obj.action) {\n    case HMR_ACTIONS_SENT_TO_BROWSER.ISR_MANIFEST: {\n      if (process.env.__NEXT_DEV_INDICATOR) {\n        if (appIsrManifestRef) {\n          appIsrManifestRef.current = obj.data\n\n          // handle initial status on receiving manifest\n          // navigation is handled in useEffect for pathname changes\n          // as we'll receive the updated manifest before usePathname\n          // triggers for new value\n          if ((pathnameRef.current as string) in obj.data) {\n            dispatcher.onStaticIndicator(true)\n          } else {\n            dispatcher.onStaticIndicator(false)\n          }\n        }\n      }\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.BUILDING: {\n      if (process.env.TURBOPACK) {\n        turbopackHmr!.onBuilding()\n      } else {\n        webpackStartMsSinceEpoch = Date.now()\n        setPendingHotUpdateWebpack()\n      }\n      console.log('[Fast Refresh] rebuilding')\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.BUILT:\n    case HMR_ACTIONS_SENT_TO_BROWSER.SYNC: {\n      if (obj.hash) {\n        handleAvailableHash(obj.hash)\n      }\n\n      const { errors, warnings } = obj\n\n      // Is undefined when it's a 'built' event\n      if ('versionInfo' in obj) dispatcher.onVersionInfo(obj.versionInfo)\n      if ('debug' in obj && obj.debug) dispatcher.onDebugInfo(obj.debug)\n      if ('devIndicator' in obj) dispatcher.onDevIndicator(obj.devIndicator)\n\n      const hasErrors = Boolean(errors && errors.length)\n      // Compilation with errors (e.g. syntax error or missing modules).\n      if (hasErrors) {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-error',\n            errorCount: errors.length,\n            clientId: __nextDevClientId,\n          })\n        )\n\n        handleErrors(errors)\n        return\n      }\n\n      const hasWarnings = Boolean(warnings && warnings.length)\n      if (hasWarnings) {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-warning',\n            warningCount: warnings.length,\n            clientId: __nextDevClientId,\n          })\n        )\n\n        // Print warnings to the console.\n        const formattedMessages = formatWebpackMessages({\n          warnings: warnings,\n          errors: [],\n        })\n\n        for (let i = 0; i < formattedMessages.warnings.length; i++) {\n          if (i === 5) {\n            console.warn(\n              'There were more warnings in other files.\\n' +\n                'You can find a complete log in the terminal.'\n            )\n            break\n          }\n          console.warn(stripAnsi(formattedMessages.warnings[i]))\n        }\n\n        // No early return here as we need to apply modules in the same way between warnings only and compiles without warnings\n      }\n\n      sendMessage(\n        JSON.stringify({\n          event: 'client-success',\n          clientId: __nextDevClientId,\n        })\n      )\n\n      if (obj.action === HMR_ACTIONS_SENT_TO_BROWSER.BUILT) {\n        handleHotUpdate()\n      }\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED: {\n      processTurbopackMessage({\n        type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED,\n        data: {\n          sessionId: obj.data.sessionId,\n        },\n      })\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE: {\n      dispatcher.onBeforeRefresh()\n      processTurbopackMessage({\n        type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE,\n        data: obj.data,\n      })\n      dispatcher.onRefresh()\n      if (RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n        performFullReload(null, sendMessage)\n      }\n      turbopackHmr!.onTurbopackMessage(obj)\n      break\n    }\n    // TODO-APP: make server component change more granular\n    case HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES: {\n      sendMessage(\n        JSON.stringify({\n          event: 'server-component-reload-page',\n          clientId: __nextDevClientId,\n          hash: obj.hash,\n        })\n      )\n\n      // Store the latest hash in a session cookie so that it's sent back to the\n      // server with any subsequent requests.\n      document.cookie = `__next_hmr_refresh_hash__=${obj.hash}`\n\n      if (RuntimeErrorHandler.hadRuntimeError) {\n        if (reloading) return\n        reloading = true\n        return window.location.reload()\n      }\n\n      startTransition(() => {\n        router.hmrRefresh()\n        dispatcher.onRefresh()\n      })\n\n      if (process.env.__NEXT_TEST_MODE) {\n        if (self.__NEXT_HMR_CB) {\n          self.__NEXT_HMR_CB()\n          self.__NEXT_HMR_CB = null\n        }\n      }\n\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE: {\n      sendMessage(\n        JSON.stringify({\n          event: 'client-reload-page',\n          clientId: __nextDevClientId,\n        })\n      )\n      if (reloading) return\n      reloading = true\n      return window.location.reload()\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE:\n    case HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE: {\n      // TODO-APP: potentially only refresh if the currently viewed page was added/removed.\n      return router.hmrRefresh()\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ERROR: {\n      const { errorJSON } = obj\n      if (errorJSON) {\n        const { message, stack } = JSON.parse(errorJSON)\n        const error = new Error(message)\n        error.stack = stack\n        handleErrors([error])\n      }\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE: {\n      return\n    }\n    default: {\n    }\n  }\n}\n\nexport default function HotReload({\n  assetPrefix,\n  children,\n  globalError,\n}: {\n  assetPrefix: string\n  children: ReactNode\n  globalError: [GlobalErrorComponent, React.ReactNode]\n}) {\n  const [state, dispatch] = useErrorOverlayReducer('app')\n\n  const dispatcher = useMemo<Dispatcher>(() => {\n    return {\n      onBuildOk() {\n        dispatch({ type: ACTION_BUILD_OK })\n      },\n      onBuildError(message) {\n        dispatch({ type: ACTION_BUILD_ERROR, message })\n      },\n      onBeforeRefresh() {\n        dispatch({ type: ACTION_BEFORE_REFRESH })\n      },\n      onRefresh() {\n        dispatch({ type: ACTION_REFRESH })\n      },\n      onVersionInfo(versionInfo) {\n        dispatch({ type: ACTION_VERSION_INFO, versionInfo })\n      },\n      onStaticIndicator(status: boolean) {\n        dispatch({ type: ACTION_STATIC_INDICATOR, staticIndicator: status })\n      },\n      onDebugInfo(debugInfo) {\n        dispatch({ type: ACTION_DEBUG_INFO, debugInfo })\n      },\n      onDevIndicator(devIndicator) {\n        dispatch({\n          type: ACTION_DEV_INDICATOR,\n          devIndicator,\n        })\n      },\n    }\n  }, [dispatch])\n\n  const handleOnUnhandledError = useCallback(\n    (error: Error): void => {\n      const errorDetails = (error as any).details as\n        | HydrationErrorState\n        | undefined\n      // Component stack is added to the error in use-error-handler in case there was a hydration error\n      const componentStackTrace =\n        (error as any)._componentStack || errorDetails?.componentStack\n      const warning = errorDetails?.warning\n\n      dispatch({\n        type: ACTION_UNHANDLED_ERROR,\n        reason: error,\n        frames: parseStack(error.stack || ''),\n        componentStackFrames:\n          typeof componentStackTrace === 'string'\n            ? parseComponentStack(componentStackTrace)\n            : undefined,\n        warning,\n      })\n    },\n    [dispatch]\n  )\n\n  const handleOnUnhandledRejection = useCallback(\n    (reason: Error): void => {\n      const stitchedError = getReactStitchedError(reason)\n      dispatch({\n        type: ACTION_UNHANDLED_REJECTION,\n        reason: stitchedError,\n        frames: parseStack(stitchedError.stack || ''),\n      })\n    },\n    [dispatch]\n  )\n  useErrorHandler(handleOnUnhandledError, handleOnUnhandledRejection)\n\n  const webSocketRef = useWebsocket(assetPrefix)\n  useWebsocketPing(webSocketRef)\n  const sendMessage = useSendMessage(webSocketRef)\n  const processTurbopackMessage = useTurbopack(sendMessage, (err) =>\n    performFullReload(err, sendMessage)\n  )\n\n  const router = useRouter()\n\n  // We don't want access of the pathname for the dev tools to trigger a dynamic\n  // access (as the dev overlay will never be present in production).\n  const pathname = useUntrackedPathname()\n  const appIsrManifestRef = useRef<Record<string, false | number>>({})\n  const pathnameRef = useRef(pathname)\n\n  if (process.env.__NEXT_DEV_INDICATOR) {\n    // this conditional is only for dead-code elimination which\n    // isn't a runtime conditional only build-time so ignore hooks rule\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      pathnameRef.current = pathname\n\n      const appIsrManifest = appIsrManifestRef.current\n\n      if (appIsrManifest) {\n        if (pathname && pathname in appIsrManifest) {\n          try {\n            dispatcher.onStaticIndicator(true)\n          } catch (reason) {\n            let message = ''\n\n            if (reason instanceof DOMException) {\n              // Most likely a SecurityError, because of an unavailable localStorage\n              message = reason.stack ?? reason.message\n            } else if (reason instanceof Error) {\n              message = 'Error: ' + reason.message + '\\n' + (reason.stack ?? '')\n            } else {\n              message = 'Unexpected Exception: ' + reason\n            }\n\n            console.warn('[HMR] ' + message)\n          }\n        } else {\n          dispatcher.onStaticIndicator(false)\n        }\n      }\n    }, [pathname, dispatcher])\n  }\n\n  useEffect(() => {\n    const websocket = webSocketRef.current\n    if (!websocket) return\n\n    const handler = (event: MessageEvent<any>) => {\n      try {\n        const obj = JSON.parse(event.data)\n        handleDevBuildIndicatorHmrEvents(obj)\n        processMessage(\n          obj,\n          sendMessage,\n          processTurbopackMessage,\n          router,\n          dispatcher,\n          appIsrManifestRef,\n          pathnameRef\n        )\n      } catch (err: unknown) {\n        reportInvalidHmrMessage(event, err)\n      }\n    }\n\n    websocket.addEventListener('message', handler)\n    return () => websocket.removeEventListener('message', handler)\n  }, [\n    sendMessage,\n    router,\n    webSocketRef,\n    dispatcher,\n    processTurbopackMessage,\n    appIsrManifestRef,\n  ])\n\n  return (\n    <AppDevOverlay state={state} globalError={globalError}>\n      {children}\n    </AppDevOverlay>\n  )\n}\n"],"names":["useCallback","useEffect","startTransition","useMemo","useRef","stripAnsi","formatWebpackMessages","useRouter","ACTION_BEFORE_REFRESH","ACTION_BUILD_ERROR","ACTION_BUILD_OK","ACTION_DEBUG_INFO","ACTION_DEV_INDICATOR","ACTION_REFRESH","ACTION_STATIC_INDICATOR","ACTION_UNHANDLED_ERROR","ACTION_UNHANDLED_REJECTION","ACTION_VERSION_INFO","REACT_REFRESH_FULL_RELOAD","reportInvalidHmrMessage","useErrorOverlayReducer","parseStack","AppDevOverlay","useErrorHandler","RuntimeErrorHandler","useSendMessage","useTurbopack","useWebsocket","useWebsocketPing","parseComponentStack","HMR_ACTIONS_SENT_TO_BROWSER","REACT_REFRESH_FULL_RELOAD_FROM_ERROR","useUntrackedPathname","getReactStitchedError","handleDevBuildIndicatorHmrEvents","reportHmrLatency","TurbopackHmr","mostRecentCompilationHash","__nextDevClientId","Math","round","random","Date","now","reloading","webpackStartMsSinceEpoch","turbopackHmr","process","env","TURBOPACK","pendingHotUpdateWebpack","Promise","resolve","resolvePendingHotUpdateWebpack","setPendingHotUpdateWebpack","waitForWebpackRuntimeHotUpdate","handleSuccessfulHotUpdateWebpack","dispatcher","sendMessage","updatedModules","onBuildOk","onRefresh","handleAvailableHash","hash","isUpdateAvailable","__webpack_hash__","canApplyUpdates","module","hot","status","afterApplyUpdates","fn","handler","removeStatusHandler","addStatusHandler","performFullReload","err","stackTrace","stack","split","slice","join","message","JSON","stringify","event","hadRuntimeError","dependencyChain","undefined","window","location","reload","tryApplyUpdates","onBeforeUpdate","onHotUpdateSuccess","handleApplyUpdates","console","warn","hasUpdates","Boolean","length","__NEXT_TEST_MODE","self","__NEXT_HMR_CB","check","then","apply","processMessage","obj","processTurbopackMessage","router","appIsrManifestRef","pathnameRef","handleErrors","errors","formatted","warnings","onBuildError","i","error","handleHotUpdate","hmrUpdate","onBuilt","startMsSinceEpoch","endMsSinceEpoch","onBeforeHotUpdate","onBeforeRefresh","onSuccessfulHotUpdate","webpackUpdatedModules","action","ISR_MANIFEST","__NEXT_DEV_INDICATOR","current","data","onStaticIndicator","BUILDING","onBuilding","log","BUILT","SYNC","onVersionInfo","versionInfo","debug","onDebugInfo","onDevIndicator","devIndicator","hasErrors","errorCount","clientId","hasWarnings","warningCount","formattedMessages","TURBOPACK_CONNECTED","type","sessionId","TURBOPACK_MESSAGE","onTurbopackMessage","SERVER_COMPONENT_CHANGES","document","cookie","hmrRefresh","RELOAD_PAGE","ADDED_PAGE","REMOVED_PAGE","SERVER_ERROR","errorJSON","parse","Error","DEV_PAGES_MANIFEST_UPDATE","HotReload","assetPrefix","children","globalError","state","dispatch","staticIndicator","debugInfo","handleOnUnhandledError","errorDetails","details","componentStackTrace","_componentStack","componentStack","warning","reason","frames","componentStackFrames","handleOnUnhandledRejection","stitchedError","webSocketRef","pathname","appIsrManifest","DOMException","websocket","addEventListener","removeEventListener"],"mappings":"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"}