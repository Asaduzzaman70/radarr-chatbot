{"version":3,"sources":["../../../src/client/components/use-reducer.ts"],"sourcesContent":["import type { Dispatch } from 'react'\nimport React, { use, useCallback } from 'react'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport type { AppRouterActionQueue } from '../../shared/lib/router/action-queue'\nimport type {\n  AppRouterState,\n  ReducerActions,\n  ReducerState,\n} from './router-reducer/router-reducer-types'\n\nexport function useUnwrapState(state: ReducerState): AppRouterState {\n  // reducer actions can be async, so sometimes we need to suspend until the state is resolved\n  if (isThenable(state)) {\n    const result = use(state)\n    return result\n  }\n\n  return state\n}\n\nexport function useReducer(\n  actionQueue: AppRouterActionQueue\n): [ReducerState, Dispatch<ReducerActions>] {\n  const [state, setState] = React.useState<ReducerState>(actionQueue.state)\n  const actionDispatch = (action: ReducerActions) => {\n    actionQueue.dispatch(action, setState)\n  }\n\n  let syncDevRenderIndicator\n  if (process.env.NODE_ENV !== 'production') {\n    const useSyncDevRenderIndicator =\n      require('./react-dev-overlay/utils/dev-indicator/use-sync-dev-render-indicator')\n        .useSyncDevRenderIndicator as typeof import('./react-dev-overlay/utils/dev-indicator/use-sync-dev-render-indicator').useSyncDevRenderIndicator\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    syncDevRenderIndicator = useSyncDevRenderIndicator()\n  }\n\n  const dispatchCallback =\n    process.env.NODE_ENV !== 'production'\n      ? (action: ReducerActions) => {\n          syncDevRenderIndicator!(() => actionDispatch(action))\n        }\n      : actionDispatch\n\n  const dispatch = useCallback(dispatchCallback, [\n    actionQueue,\n    dispatchCallback,\n    syncDevRenderIndicator,\n  ])\n\n  return [state, dispatch]\n}\n"],"names":["React","use","useCallback","isThenable","useUnwrapState","state","result","useReducer","actionQueue","setState","useState","actionDispatch","action","dispatch","syncDevRenderIndicator","process","env","NODE_ENV","useSyncDevRenderIndicator","require","dispatchCallback"],"mappings":"AACA,OAAOA,SAASC,GAAG,EAAEC,WAAW,QAAQ,QAAO;AAC/C,SAASC,UAAU,QAAQ,+BAA8B;AAQzD,OAAO,SAASC,eAAeC,KAAmB;IAChD,4FAA4F;IAC5F,IAAIF,WAAWE,QAAQ;QACrB,MAAMC,SAASL,IAAII;QACnB,OAAOC;IACT;IAEA,OAAOD;AACT;AAEA,OAAO,SAASE,WACdC,WAAiC;IAEjC,MAAM,CAACH,OAAOI,SAAS,GAAGT,MAAMU,QAAQ,CAAeF,YAAYH,KAAK;IACxE,MAAMM,iBAAiB,CAACC;QACtBJ,YAAYK,QAAQ,CAACD,QAAQH;IAC/B;IAEA,IAAIK;IACJ,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;QACzC,MAAMC,4BACJC,QAAQ,yEACLD,yBAAyB;QAC9B,sDAAsD;QACtDJ,yBAAyBI;IAC3B;IAEA,MAAME,mBACJL,QAAQC,GAAG,CAACC,QAAQ,KAAK,eACrB,CAACL;QACCE,uBAAwB,IAAMH,eAAeC;IAC/C,IACAD;IAEN,MAAME,WAAWX,YAAYkB,kBAAkB;QAC7CZ;QACAY;QACAN;KACD;IAED,OAAO;QAACT;QAAOQ;KAAS;AAC1B"}